<?php

use Drupal\block\Entity\Block;
use Drupal\Core\Access\AccessResult;
use Drupal\Core\Session\AccountInterface;
use \Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_alter().
 */

function display_answer_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if (strpos($form_id, 'webform_submission_answer_text_node_') !== false) {
    //kint($form);
    // Get nid of a curre node.
    $node = \Drupal::routeMatch()->getParameter('node');
    if ($node instanceof \Drupal\node\NodeInterface) {
      // You can get nid and anything else you need from the node object.
      $nid = $node->id();
    }
    $uid = \Drupal::currentUser()->id();

    // Query to get answer markup from webform submissions.
    $query = \Drupal::entityQuery('webform_submission')
      ->condition('entity_type', 'node')
      ->condition('entity_id', $nid, '=')
      ->condition('uid', $uid, '=');
    $results = $query->execute();
    if ($results) {
      $form['#access'] = FALSE;
    }
  }
}

/**
 * Implements hook_block_access().
 */
function display_answer_block_access(Block $block, $operation, AccountInterface $account) {
  if ($operation == 'view' && $block->getPluginId() == 'views_block:expert_answer_-block_1') {

    $node = \Drupal::routeMatch()->getParameter('node');
    if ($node instanceof \Drupal\node\NodeInterface) {
      // You can get nid and anything else you need from the node object.
      $nid = $node->id();
    }
    $uid = \Drupal::currentUser()->id();
    // Query to get answer markup from webform submissions.
    $query = \Drupal::entityQuery('webform_submission')
      ->condition('entity_type', 'node')
      ->condition('entity_id', $nid, '=')
      ->condition('uid', $uid, '=');
    $results = $query->execute();
    if (!$results) {
      return AccessResult::forbiddenIf(TRUE)->addCacheableDependency($block);
    }
    return AccessResult::neutral();
  }
}
